[Unit]
Description=Alphaville Series neo4j rw service red
After=docker.service
Requires=docker.service
Wants=neo4j-red@1.service alphaville-series-rw-neo4j-red-sidekick@%i.service

[Service]
Environment="DOCKER_APP_VERSION=latest"
TimeoutStartSec=0
# Change killmode from "control-group" to "none" to let Docker remove work correctly.
KillMode=none
ExecStartPre=-/bin/bash -c '/usr/bin/docker kill %p-%i > /dev/null 2>&1'
ExecStartPre=-/bin/bash -c '/usr/bin/docker rm %p-%i > /dev/null 2>&1'
ExecStartPre=/bin/bash -c 'docker history coco/alphaville-series-rw-neo4j:$DOCKER_APP_VERSION > /dev/null 2>&1 || docker pull coco/alphaville-series-rw-neo4j:$DOCKER_APP_VERSION'

ExecStart=/bin/sh -c '\
  export PORT=8080; \
  export ENV=$(/usr/bin/etcdctl get /ft/config/environment_tag); \
  /usr/bin/docker run --rm --name %p-%i -p $PORT --env "NEO_URL=http://$HOSTNAME:8080/__neo4j-red/db/data" --env "BATCH_SIZE=50" --env "GRAPHITE_TCP_ADDRESS=graphite.ft.com:2003" --env "GRAPHITE_PREFIX=coco.services.$ENV.alphaville-series-rw-neo4j-red.%i" coco/alphaville-series-rw-neo4j:$DOCKER_APP_VERSION;'
ExecStop=/usr/bin/docker stop -t 3 %p-%i
Restart=on-failure
RestartSec=60

[X-Fleet]
Conflicts=alphaville-series-rw-neo4j-red@*.service
