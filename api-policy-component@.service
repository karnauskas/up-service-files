[Unit]
Description=Api policy component
After=vulcan.service
Requires=docker.service
Wants=api-policy-component-sidekick@%i.service

[Service]
Environment="DOCKER_APP_VERSION=latest"
TimeoutStartSec=0
# Change killmode from "control-group" to "none" to let Docker remove
# work correctly.
KillMode=none
ExecStartPre=-/bin/bash -c '/usr/bin/docker kill "$(docker ps -q --filter=name=%p-%i_)" > /dev/null 2>&1'
ExecStartPre=-/bin/bash -c '/usr/bin/docker rm "$(docker ps -q --filter=name=%p-%i_)" > /dev/null 2>&1'
ExecStartPre=/bin/bash -c '/usr/bin/docker history coco/api-policy-component:$DOCKER_APP_VERSION > /dev/null 2>&1 \
  || docker pull coco/api-policy-component:$DOCKER_APP_VERSION'

# Through the port 8182 vulcan's api status endpoint can be accessed.
ExecStart=/bin/sh -c '\
  export ENV=$(/usr/bin/etcdctl get /ft/config/environment_tag); \
  export JAVA_OPTS="-Xms384m -Xmx384m -XX:+UseG1GC -server"; \
  /usr/bin/docker run --rm --name %p-%i_$(uuidgen) -p 8080 -p 8081 \
  --env "JAVA_OPTS=$JAVA_OPTS" \
  --env "READ_ENDPOINT=$HOSTNAME:8080:8182" \
  --env "GRAPHITE_HOST=graphite.ft.com" \
  --env "GRAPHITE_PORT=2003" \
  --env "JERSEY_TIMEOUT_DURATION=10000ms" \
  --env "CHECKING_VULCAN_HEALTH=true" \
  --env "GRAPHITE_PREFIX=coco.services.$ENV.api-policy-component.%i" \
  --env "CHECKING_VULCAN_HEALTH=true" \
  coco/api-policy-component:$DOCKER_APP_VERSION'
ExecStop=-/bin/bash -c '/usr/bin/docker stop -t 3 "$(docker ps -q --filter=name=%p-%i_)"'
Restart=on-failure
RestartSec=60

[X-Fleet]
Conflicts=api-policy-component@*.service
