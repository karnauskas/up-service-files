[Unit]
Description=Binary Ingester
After=vulcan.service kafka.service
Requires=docker.service
Wants=binary-ingester-sidekick@%i.service

[Service]
Environment="DOCKER_APP_VERSION=latest"
TimeoutStartSec=0
# Change killmode from "control-group" to "none" to let Docker remove
# work correctly.
KillMode=none
MemoryLimit=1G
ExecStartPre=-/bin/bash -c '/usr/bin/docker kill "$(docker ps -q --filter=name=%p-%i_)" > /dev/null 2>&1'
ExecStartPre=-/bin/bash -c '/usr/bin/docker rm "$(docker ps -q --filter=name=%p-%i_)" > /dev/null 2>&1'
ExecStartPre=/bin/bash -c 'docker history up-registry.ft.com/coco/ingester:$DOCKER_APP_VERSION > /dev/null 2>&1 \
  || docker pull up-registry.ft.com/coco/ingester:$DOCKER_APP_VERSION'

ExecStart=/bin/sh -c '\
  export APP_PORT=8080; \
  export ADMIN_PORT=8080; \
  export ZOOKEEPER_HOST=$(/usr/bin/etcdctl get /ft/config/zookeeper/ip); \
  export ZOOKEEPER_PORT=$(/usr/bin/etcdctl get /ft/config/zookeeper/port); \
  export KAFKA_HOST=$(/usr/bin/etcdctl get /ft/config/kafka/ip); \
  export KAFKA_PORT=$(/usr/bin/etcdctl get /ft/config/kafka/port); \
  export WHITELIST="^http://methode-image-binary-mapper(-pr|-iw)?(-uk-.*)?\\.svc\\.ft\\.com(:\\d{2,5})?/image/binary/[\\w-]+.*$"; \
  export WRITER_HEALTHCHECK_NAME="Can connect to the Binary Writer"; \
  export WRITER_HEALTHCHECK_TECH_SUMMARY="Tests that the build-info endpoint for the Binary Writer returns a 200 response"; \
  export JAVA_OPTS="-Xms128m -Xmx128m -XX:+UseG1GC -server"; \
  /usr/bin/docker run --rm --name %p-%i_$(uuidgen) -p 8080 -p 8081 \
    --env "JAVA_OPTS=$JAVA_OPTS" \
    --env "VULCAN_HOST=%H:8080" \
    --env "APP_PORT=$APP_PORT" \
    --env "ADMIN_PORT=$ADMIN_PORT" \
    --env "ZOOKEEPER_HOST=$ZOOKEEPER_HOST" \
    --env "ZOOKEEPER_PORT=$ZOOKEEPER_PORT" \
    --env "KAFKA_HOST=$KAFKA_HOST" \
    --env "KAFKA_PORT=$KAFKA_PORT" \
    --env "KAFKA_GROUPNAME=BinaryIngester" \
    --env "KAFKA_SYSTEM_ID=BinaryIngester" \
    --env "UPP_GATEWAY_PATH=" \
    --env "KAFKA_TOPIC_NAME=CmsPublicationEvents" \
    --env "TRANSFORMER_PROXY=$HOSTNAME:8080" \
    --env "WHITELIST=$WHITELIST" \
    --env "WRITER_HEADER=binary-writer" \
    --env "WRITER_NAME=BinaryWriter" \
    --env "USE_GZIP_FOR_REQUESTS=false" \
    --env "WRITER_HEALTHCHECK_NAME=$WRITER_HEALTHCHECK_NAME" \
    --env "WRITER_HEALTHCHECK_TECH_SUMMARY=$WRITER_HEALTHCHECK_TECH_SUMMARY" \
    --env "MESSAGE_FORWARDING_ENABLED=false" \
    --env "FORWARD_TO_TOPIC_NAME=PostPublicationEvents" \
    --env "KAFKA_PROXY=%H:8080" \
  up-registry.ft.com/coco/ingester:$DOCKER_APP_VERSION'

ExecStop=-/bin/bash -c 'docker stop -t 3 "$(docker ps -q --filter=name=%p-%i_)"'
Restart=on-failure
RestartSec=60

[X-Fleet]
Conflicts=%p@*.service
