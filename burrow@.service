[Unit]
Description=burrow service
After=vulcan.service
Requires=docker.service
Wants=burrow-sidekick@%i.service

[Service]
Environment="DOCKER_APP_VERSION=latest"
TimeoutStartSec=0
# Change killmode from "control-group" to "none" to let Docker remove work correctly.
KillMode=none
ExecStartPre=-/bin/bash -c '/usr/bin/docker kill "$(docker ps -q --filter=name=%p-%i_)" > /dev/null 2>&1'
ExecStartPre=-/bin/bash -c '/usr/bin/docker rm "$(docker ps -q --filter=name=%p-%i_)" > /dev/null 2>&1'
ExecStartPre=/bin/bash -c '/usr/bin/docker history coco/burrow:$DOCKER_APP_VERSION > /dev/null 2>&1 \
  || /usr/bin/docker pull coco/burrow:$DOCKER_APP_VERSION'

ExecStart=/bin/sh -c '\
  export ZOOKEEPER_HOST=$(/usr/bin/etcdctl get /ft/config/zookeeper/ip); \
  export ZOOKEEPER_PORT=$(/usr/bin/etcdctl get /ft/config/zookeeper/port); \
  export KAFKA_HOST=$(/usr/bin/etcdctl get /ft/config/kafka/ip); \
  export KAFKA_PORT=$(/usr/bin/etcdctl get /ft/config/kafka/port); \
  /usr/bin/docker run --rm --name %p-%i_$(uuidgen) -p 8080 -p 8081 \
    --env "ZOOKEEPER_HOST=$ZOOKEEPER_HOST" \
    --env "ZOOKEEPER_PORT=$ZOOKEEPER_PORT" \
    --env "KAFKA_HOST=$KAFKA_HOST" \
    --env "KAFKA_PORT=$KAFKA_PORT" \
    coco/burrow:$DOCKER_APP_VERSION;'

ExecStop=-/bin/bash -c 'docker stop -t 3 "$(docker ps -q --filter=name=%p-%i_)"'
Restart=on-failure
RestartSec=60

[X-Fleet]
Conflicts=burrow@*.service
