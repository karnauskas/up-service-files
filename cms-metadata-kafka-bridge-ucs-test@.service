[Unit]
Description=CMS Metadata Kafka Bridge UCS Test
After=vulcan.service
Requires=docker.service
Wants=cms-metadata-kafka-bridge-ucs-test-sidekick@%i.service

[Service]
Environment="DOCKER_APP_VERSION=latest"
TimeoutStartSec=0
# Change killmode from "control-group" to "none" to let Docker remove work correctly.
KillMode=none
ExecStartPre=-/bin/bash -c '/usr/bin/docker kill %p-%i > /dev/null 2>&1'
ExecStartPre=-/bin/bash -c '/usr/bin/docker rm %p-%i > /dev/null 2>&1'
ExecStartPre=/bin/bash -c 'docker pull coco/coco-kafka-bridge:$DOCKER_APP_VERSION'

ExecStart=/bin/sh -c '\
  export APP_PORT=8080; \
  export QUEUE_PROXY_ADDRS=https://kafka-proxy-pr-uk-t-2.glb.ft.com,https://kafka-proxy-pr-uk-t-2.glb.ft.com; \
  export GROUP_ID=$(/usr/bin/etcdctl get /ft/config/environment_tag)"-cms-metadata-kafka-bridge-prod"; \
  export AUTHORIZATION_KEY=$(/usr/bin/etcdctl get /ft/_credentials/kafka-bridge/authorization_key); \
  export VULCAN_AUTH=$(/usr/bin/etcdctl get /ft/_credentials/vulcand/authorization_header); \
  /usr/bin/docker run --rm --name %p-%i -p $APP_PORT -v "/etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt" --env "QUEUE_PROXY_ADDRS=$QUEUE_PROXY_ADDRS" --env "GROUP_ID=$GROUP_ID" --env "CONSUMER_AUTOCOMMIT_ENABLE=true" --env "AUTHORIZATION_KEY=$AUTHORIZATION_KEY" --env "TOPIC=NativeCmsMetadataPublicationEvents" --env "PRODUCER_HOST=http://%H:8080" --env "PRODUCER_HOST_HEADER=kafka" --env "PRODUCER_VULCAN_AUTH=$VULCAN_AUTH" --env "PRODUCER_TYPE=proxy" coco/coco-kafka-bridge:$DOCKER_APP_VERSION;'
ExecStop=/usr/bin/docker stop -t 3 %p-%i
Restart=on-failure
RestartSec=60

[X-Fleet]
Conflicts=cms-metadata-kafka-bridge-ucs-test@*.service
