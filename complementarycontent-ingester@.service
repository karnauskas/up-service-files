[Unit]
Description=Complementary Content Ingester
After=vulcan.service
Requires=docker.service
Wants=complementary-content-ingester-sidekick@%i.service

[Service]
Environment="DOCKER_APP_VERSION=latest"
TimeoutStartSec=0
# Change killmode from "control-group" to "none" to let Docker remove
# work correctly.
KillMode=none
MemoryLimit=1G
ExecStartPre=-/bin/bash -c '/usr/bin/docker login --username "$(/usr/bin/etcdctl get /ft/_credentials/nexus/docker_user)" \
--password "$(/usr/bin/etcdctl get /ft/_credentials/nexus/docker_pass)" nexus.in.ft.com:5000 > /dev/null 2>&1'
ExecStartPre=-/bin/bash -c '/usr/bin/docker kill "$(docker ps -q --filter=name=^/%p-%i_)" > /dev/null 2>&1'
ExecStartPre=-/bin/bash -c '/usr/bin/docker rm "$(docker ps -q --filter=name=^/%p-%i_)" > /dev/null 2>&1'
ExecStartPre=/bin/bash -c '/usr/bin/docker history nexus.in.ft.com:5000/coco/ingester:$DOCKER_APP_VERSION > /dev/null 2>&1 \
  || /usr/bin/docker pull nexus.in.ft.com:5000/coco/ingester:$DOCKER_APP_VERSION'

ExecStart=/bin/sh -c '\
  export APP_PORT=8080; \
  export ADMIN_PORT=8080; \
  export ZK_HOST=$(/usr/bin/etcdctl get /ft/config/zookeeper/ip); \
  export ZK_PORT=$(/usr/bin/etcdctl get /ft/config/zookeeper/port); \
  export KAFKA_HOST=$(/usr/bin/etcdctl get /ft/config/kafka/ip); \
  export KAFKA_PORT=$(/usr/bin/etcdctl get /ft/config/kafka/port); \
  export WHITELIST="^http://methode-content-placeholder-mapper(-pr|-iw)?(-uk-.*)?\\.svc\\.ft\\.com(:\\d{2,5})?/complementarycontent/[\\w-]+.*$"; \
  export WR_HC_NAME="Can connect to the Document Store"; \
  export WR_HC_TECH_SUMMARY="Tests that the build-info endpoint for the Document Store returns a 200 response"; \
  export JAVA_OPTS="-Xms256m -Xmx256m -XX:+UseG1GC -server"; \
  export PANIC_GUIDE_URL="https://dewey.ft.com/complementary-content-ingester.html"; \
  /usr/bin/docker run --rm --name %p-%i_$(uuidgen) -p 8080 -p 8081 \
      --env "JAVA_OPTS=$JAVA_OPTS" \
      --env "VULCAN_HOST=%H:8080" \
      --env "APP_PORT=$APP_PORT" --env "ADMIN_PORT=$ADMIN_PORT" \
      --env "ZOOKEEPER_HOST=$ZK_HOST" --env "ZOOKEEPER_PORT=$ZK_PORT" \
      --env "KAFKA_HOST=$KAFKA_HOST" --env "KAFKA_PORT=$KAFKA_PORT" --env "KAFKA_GROUPNAME=complementarycontent" --env "KAFKA_SYSTEM_ID=ComplementaryContentIngester" --env "KAFKA_TOPIC_NAME=CmsPublicationEvents" \
      --env "UPP_GATEWAY_PATH=" \
      --env "TRANSFORMER_PROXY=$HOSTNAME:8080" \
      --env "WHITELIST=$WHITELIST" \
      --env "WRITER_HEADER=document-store-api" --env "WRITER_NAME=DocumentStore" --env "WRITER_HEALTHCHECK_NAME=$WR_HC_NAME" --env "WRITER_HEALTHCHECK_TECH_SUMMARY=$WR_HC_TECH_SUMMARY" \
      --env "MESSAGE_FORWARDING_ENABLED=true" --env "FORWARD_TO_TOPIC_NAME=PostPublicationEvents" \
      --env "KAFKA_PROXY=%H:8080" \
      --env "PANIC_GUIDE_URL=$PANIC_GUIDE_URL"  \
      up-registry.ft.com/coco/ingester:$DOCKER_APP_VERSION'

ExecStop=-/bin/bash -c 'docker stop -t 3 "$(docker ps -q --filter=name=^/%p-%i_)"'
Restart=on-failure
RestartSec=60

[X-Fleet]
Conflicts=%p@*.service
