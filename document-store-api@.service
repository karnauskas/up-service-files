[Unit]
Description=mongodb backed document store api
After=docker.service
Requires=docker.service
# TODO: should not require mongo. Instead, allow unheathy startup.
# TODO: reach when more mongo instances appear.
Wants=mongodb@1.service document-store-api-sidekick@%i.service

[Service]
Environment="DOCKER_APP_VERSION=latest"
TimeoutStartSec=0
# Change killmode from "control-group" to "none" to let Docker remove
# work correctly.
KillMode=none
ExecStartPre=-/bin/bash -c '/usr/bin/docker kill %p-%i > /dev/null 2>&1'
ExecStartPre=-/bin/bash -c '/usr/bin/docker rm %p-%i > /dev/null 2>&1'
ExecStartPre=/bin/bash -c "/usr/bin/docker pull up-registry.ft.com/coco/document-store-api:$DOCKER_APP_VERSION"
ExecStart=/bin/sh -c "\
  MONGO_ADDRESSES=$(for x in $(etcdctl ls /ft/config/mongodb); do echo -n $(etcdctl get $x/host):$(etcdctl get $x/port)\",\"; done);\
  API_HOST=$(etcdctl get /ft/config/api_host) ;\
  /usr/bin/docker run --rm --name %p-%i -p 8080 -p 8081 --env \"MONGO_ADDRESSES=$(echo $MONGO_ADDRESSES | sed s/.$//)\" --env \"API_HOST=$API_HOST\" up-registry.ft.com/coco/document-store-api:$DOCKER_APP_VERSION;"
ExecStop=/usr/bin/docker stop -t 3 %p-%i
Restart=on-failure
RestartSec=60

[X-Fleet]
Conflicts=document-store-api@*.service
