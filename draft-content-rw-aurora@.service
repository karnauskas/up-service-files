[Unit]
Description=Draft content r/w for Aurora
After=vulcan.service
Requires=docker.service
Wants=draft-content-rw-aurora-sidekick@%i.service

[Service]
Environment="DOCKER_APP_VERSION=latest"
TimeoutStartSec=0
# Change killmode from "control-group" to "none" to let Docker remove
# work correctly.
KillMode=none
ExecStartPre=-/bin/bash -c '/usr/bin/docker kill "$(docker ps -q --filter=name=%p-%i_)" > /dev/null 2>&1'
ExecStartPre=-/bin/bash -c '/usr/bin/docker rm "$(docker ps -q --filter=name=%p-%i_)" > /dev/null 2>&1'
ExecStartPre=/bin/bash -c '/usr/bin/docker history coco/content-rw-aurora:$DOCKER_APP_VERSION > /dev/null 2>&1 \
  || docker pull coco/content-rw-aurora:$DOCKER_APP_VERSION'

# Through the port 8182 vulcan's api status endpoint can be accessed.
ExecStart=/bin/sh -c '\
  export ENV=$(/usr/bin/etcdctl get /ft/config/environment_tag); \
  export DB_URL=$(/usr/bin/etcdctl get /ft/config/draft-content/aurora/url); \
  export DB_USER=$(/usr/bin/etcdctl get /ft/_credentials/aurora/draft-content/username); \
  export DB_PASS=$(/usr/bin/etcdctl get /ft/_credentials/aurora/draft-content/password); \
  export JAVA_OPTS="-Xms384m -Xmx384m -XX:+UseG1GC -server"; \
  /usr/bin/docker run --rm --name %p-%i_$(uuidgen) -p 8080 -p 8081 \
  --env "JAVA_OPTS=$JAVA_OPTS" \
  --env "JDBC_URL=$DB_URL" \
  --env "JDBC_USERNAME=$DB_USER" \
  --env "JDBC_PASSWORD=$DB_PASS" \
  coco/content-rw-aurora:$DOCKER_APP_VERSION'
ExecStop=-/bin/bash -c '/usr/bin/docker stop -t 3 "$(docker ps -q --filter=name=%p-%i_)"'
Restart=on-failure
RestartSec=60

[X-Fleet]
Conflicts=draft-content-rw-aurora@*.service
