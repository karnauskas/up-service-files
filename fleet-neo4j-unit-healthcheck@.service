[Unit]
Description=Fleet Neo4J unit healthcheck monitoring service
Requires=docker.socket
After=docker.socket
Wants=fleet-neo4j-unit-healthcheck-sidekick@%i.service

[Service]
Environment="DOCKER_APP_VERSION=latest"
TimeoutStartSec=0
# Change killmode from "control-group" to "none" to let Docker remove
# work correctly.
KillMode=none
ExecStartPre=-/bin/bash -c '/usr/bin/docker kill "$(docker ps -q --filter=name=^/%p-%i_)" > /dev/null 2>&1'
ExecStartPre=-/bin/bash -c '/usr/bin/docker rm "$(docker ps -q --filter=name=^/%p-%i_)" > /dev/null 2>&1'
ExecStartPre=/bin/bash -c "/usr/bin/docker pull coco/coco-fleet-unit-healthcheck:$DOCKER_APP_VERSION"
ExecStart=/bin/bash -c "\
    export ENV=$(/usr/bin/etcdctl get /ft/config/environment_tag); \
    export FLEET_ENDPOINT=$(/usr/bin/ectdctl get /ft/config/neo4j/fleet_endpoint); \
    /usr/bin/docker run --rm --name %p-%i_$(uuidgen) -p 8080 \
    --memory=\"256m\" \
    --env=\"FLEET_ENDPOINT=$FLEET_ENDPOINT\" \
    coco/coco-fleet-unit-healthcheck:$DOCKER_APP_VERSION"

ExecStop=-/bin/bash -c 'docker stop -t 3 "$(docker ps -q --filter=name=^/%p-%i_)"'
Restart=on-failure
RestartSec=60
