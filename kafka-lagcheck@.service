[Unit]
Description=kafka lagcheck service
After=vulcan.service
Requires=docker.service
Wants=kafka-lagcheck-sidekick@%i.service

[Service]
Environment="DOCKER_APP_VERSION=latest"
TimeoutStartSec=0
# Change killmode from "control-group" to "none" to let Docker remove work correctly.
KillMode=none
ExecStartPre=-/bin/bash -c '/usr/bin/docker kill "$(docker ps -q --filter=name=%p-%i_)" > /dev/null 2>&1'
ExecStartPre=-/bin/bash -c '/usr/bin/docker rm "$(docker ps -q --filter=name=%p-%i_)" > /dev/null 2>&1'
ExecStartPre=/bin/bash -c '/usr/bin/docker history coco/kafka-lagcheck:$DOCKER_APP_VERSION > /dev/null 2>&1 \
  || /usr/bin/docker pull coco/kafka-lagcheck:$DOCKER_APP_VERSION'
  
ExecStart=/bin/sh -c '\
  LAG_TOLERANCE=$(etcdctl get /ft/config/kafka-lagcheck/lag-tolerance) || LAG_TOLERANCE=30; \
  WHITELISTED_ENVS=$(etcdctl get /ft/config/kafka-lagcheck/whitelisted-envs); \
  /usr/bin/docker run --rm --name %p-%i_$(uuidgen) -p 8080 \
    --memory="256m" \
    --env "HOST_MACHINE=%H" \
    --env "WHITELISTED_TOPICS=Concept" \
    --env "WHITELISTED_ENVS=$WHITELISTED_ENVS" \
    --env "LAG_TOLERANCE=$LAG_TOLERANCE" \
    coco/kafka-lagcheck:$DOCKER_APP_VERSION;'
    
ExecStop=-/bin/bash -c 'docker stop -t 3 "$(docker ps -q --filter=name=%p-%i_)"'
Restart=on-failure
RestartSec=60

[X-Fleet]
Conflicts=kafka-lagcheck@*.service
