[Unit]
Description=List Notifications Read/Write Service
After=vulcan.service
Requires=docker.service
Wants=list-notifications-rw-sidekick@%i.service

[Service]
Environment="DOCKER_APP_VERSION=latest"
TimeoutStartSec=0
# Change killmode from "control-group" to "none" to let Docker remove
# work correctly.
KillMode=none
ExecStartPre=-/bin/bash -c '/usr/bin/docker kill "$(docker ps -q --filter=name=^/%p-%i_)" > /dev/null 2>&1'
ExecStartPre=-/bin/bash -c '/usr/bin/docker rm "$(docker ps -q --filter=name=^/%p-%i_)" > /dev/null 2>&1'
ExecStartPre=/bin/bash -c 'docker history coco/list-notifications-rw:$DOCKER_APP_VERSION > /dev/null 2>&1 \
   || docker pull coco/list-notifications-rw:$DOCKER_APP_VERSION'

ExecStart=/bin/sh -c '\
  MONGO_ADDRESSES=$(for x in $(etcdctl ls /ft/config/mongodb); do echo -n $(etcdctl get $x/host):$(etcdctl get $x/port)","; done);\
  ENV_API_HOST=$(etcdctl get /ft/config/api_host) ; \
  /usr/bin/docker run --rm --name %p-%i_$(uuidgen) -p 8080 -p 8081 \
    --memory="128m" \
    --env "MONGO_ADDRESSES=$(echo $MONGO_ADDRESSES | sed s/.$//)" \
    --env "API_HOST=$ENV_API_HOST" \
    --env "DUMP_REQUESTS=false" \
    --env "CACHE_TTL=$(/usr/bin/etcdctl get /ft/config/cache-max-age)" \
      coco/list-notifications-rw:$DOCKER_APP_VERSION;'

ExecStop=-/bin/bash -c 'docker stop -t 3 "$(docker ps -q --filter=name=^/%p-%i_)"'
Restart=on-failure
RestartSec=60

[X-Fleet]
Conflicts=list-notifications-rw@*.service
