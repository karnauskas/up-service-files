[Unit]
Description=MongoDB cluster configurator
Requires=docker.service
After=docker.service

[Service]
Environment="DOCKER_APP_VERSION=latest"
TimeoutStartSec=0
# Change killmode from "control-group" to "none" to let Docker remove
# work correctly.
KillMode=none
Type=oneshot
RemainAfterExit=yes
ExecStartPre=-/bin/bash -c "/usr/bin/docker kill %p > /dev/null 2>&1"
ExecStartPre=-/bin/bash -c "/usr/bin/docker rm %p > /dev/null 2>&1"
ExecStartPre=/bin/bash -c "/usr/bin/docker pull coco/coco-mongodb-configurator:$DOCKER_APP_VERSION"
ExecStart=/bin/bash -c '\
    EXPECTED_MONGOS=3; \
    echo "INFO Waiting for all mongodb instances to start"; \
    while true; do \
      MONGOCOUNT=0; \
      MONGOS=$(etcdctl ls /ft/config/mongodb/); \
      ALL=""; \
      for m in $MONGOS; do \
	HOST=$(etcdctl get $m/host); \
	PORT=$(etcdctl get $m/port); \
	ADMIN_PORT=$(etcdctl get $m/admin_port); \
	if [[ "$HOST" != "" && "$PORT" != "" && "$ADMIN_PORT" != "" ]]; then \
	  (( MONGOCOUNT++ )) ; \
          hostportadmin=$HOST:$PORT:$ADMIN_PORT; \
          ALL="$ALL $hostportadmin"; \
	fi ; \
      done; \
      if [ $MONGOCOUNT -eq $EXPECTED_MONGOS ]; then \
        break; \
      fi; \
      curl -s --max-time 30 -L "http://$HOSTNAME:2379/v2/keys/ft/config/mongodb/?wait=true&recursive=true"; \
      echo "INFO Still waiting for all mongodb instances to start"; \
    done; \
    echo "INFO Got all instances, configuring mongodb cluster"; \
    docker run --rm --name %p --env="ARGS=$ALL" coco/coco-mongodb-configurator:$DOCKER_APP_VERSION;'
ExecStop=/usr/bin/docker stop -t 3 %p

