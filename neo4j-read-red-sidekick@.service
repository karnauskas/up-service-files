[Unit]
Description=Neo4j Read Red Sidekick
BindsTo=neo4j-red@%i.service
After=neo4j-red@%i.service

[Service]
RemainAfterExit=yes
ExecStart=/bin/sh -c '\
  etcdctl set /vulcand/backends/neo4j-read/backend \'{\"Type\": \"http\", \"Settings\": {\"KeepAlive\": {\"MaxIdleConnsPerHost\": 256, \"Period\": \"35s\"}}}\'; \
  etcdctl set /vulcand/frontends/neo4j-read/frontend \'{"Type": "http", "BackendId\": "neo4j-read", "Route": "PathRegexp(`/__neo4j-read/.*`)", "Settings": { "TrustForwardHeader": true, "PassHostHeader": true }}\'; \
  etcdctl set /vulcand/frontends/neo4j-read/middlewares/rewrite \'{"Id":"rewrite", "Type":"rewrite", "Priority":1, "Middleware": {"Regexp":"/__neo4j-read(/.*)", "Replacement":"$1"}}\'; \
  etcdctl set /vulcand/frontends/neo4j-read-db/frontend \'{"Type": "http", "BackendId": "neo4j-read", "Route": "PathRegexp(`^/db/data/.*`) && Header(`User-Agent`, `neoism`)", "Settings": { "TrustForwardHeader": true, "PassHostHeader": true }}\'; \
  while [ -z $PORT ]; do \
    sleep 5; \
    CONTAINER_NAME=$(docker ps -q --filter=name=neo4j-red-%i_); \
    PORT=`echo $(/usr/bin/docker port $CONTAINER_NAME 7474 | cut -d":" -f2)`; \
  done; \
  etcdctl set /vulcand/backends/neo4j-read/servers/1 "{\\"url\\": \\"http://$HOSTNAME:$PORT\\"}"'

ExecStop=-/bin/bash -c 'etcdctl rm /vulcand/backends/neo4j-read/servers/1'

[X-Fleet]
MachineOf=neo4j-red@%i.service
