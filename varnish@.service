[Unit]
Description=Varnish
After=docker.service
After=elb-presence@%i.service
Requires=docker.service

[Service]
Environment="DOCKER_APP_VERSION=latest"
TimeoutStartSec=0
# Change killmode from "control-group" to "none" to let Docker remove
# work correctly.
KillMode=none
ExecStartPre=-/bin/bash -c 'docker kill "$(docker ps -q --filter=name=%p-%i_)" >/dev/null 2>&1'
ExecStartPre=-/bin/bash -c 'docker rm "$(docker ps -q --filter=name=%p-%i_)" >/dev/null 2>&1'
ExecStartPre=/bin/bash -c 'docker history coco/delivery-varnish:$DOCKER_APP_VERSION >/dev/null 2>&1 \
  || docker pull coco/delivery-varnish:$DOCKER_APP_VERSION'

ExecStart=/bin/bash -c '\
  ETCD_HOST="http://%H:2379"; \
  ETCD_CONFIG_KEY="/ft/_credentials/varnish/htpasswd"; \
  docker run --rm --name %p-%i_$(uuidgen) -p 80:80 \
  -e "VARNISH_BACKEND_HOST=%H" \
  -e "VARNISH_BACKEND_PORT=8080" \
  -e "CONTENT_NOTIFICATIONS_PUSH_PORT=8548" \
  -e "LIST_NOTIFICATIONS_PUSH_PORT=8549" \
  -e "HOST_HEADER=api-policy-component" \
  -e "ETCD_HOST=$ETCD_HOST" \
  -e "ETCD_CONFIG_KEY=$ETCD_CONFIG_KEY" \
  coco/delivery-varnish:$DOCKER_APP_VERSION'

ExecStop=-/bin/bash -c 'docker stop -t 3 "$(docker ps -q --filter=name=%p-%i_)"'

[X-Fleet]
Conflicts=%p@*.service
